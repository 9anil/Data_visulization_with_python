# -*- coding: utf-8 -*-
"""histogram_multichar_pairplot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18fp8UJEcn2B2q7310wF_KENuQnd26sdZ
"""

# Heatmap : A heatmap is used to visulize 2-dimension data like a matrix or a table using color.The best way to understand i tis by looking at an example
# We will use another dataset from seaborn called 'flight' to visulize monthly passenger football at an airport over 12 year.
import matplotlib.pyplot as plt
import seaborn as srn
flights_data=srn.load_dataset('flights').pivot("month","year","passengers")
print(flights_data)

# flight_data is a matrix with one row for each month and one column for each year the values in the matrix show the number of passengers(inthousand) that visited
# That visited the airport in a specific year. We can use srn.heatmap function to visualize the football at the airport.
plt.title("Number of passengers (1000s)")
srn.heatmap(flights_data)

'''The footfall at the airport in any given year tends to be the highest around July & August.
The footfall at the airport in any given month tends to grow year by year.
We can also display the actual values in each block by specifying  annot=True and use camp argument to change the color palette'''
plt.title("Number of passenger(1000s)")
srn.heatmap(flights_data, fmt='d', annot=True, cmap='Blues')

# Images : matplotlib can also used to display images.
# Let's download an image from internet
from urllib.request import urlretrieve
urlretrieve('https://i.imgur.com/SkPbq.jpg','Bar_Chart.jpg');
# Before an image can be displayed, it has to be read into memory using the PLT module

from PIL import Image
img=Image.open('Bar_Chart.jpg')
# An image loaded using PIL is simply a three dimensional numpy array containing pixel intensities for the red,green,blue(RGB) channels of the image.
# We can convert the image into an array using np.array.
srn.set_style('whitegrid')
import numpy as np
img_array=np.array(img)
img_array.shape

# We can display the image using plt.imshow
plt.imshow(img)

from urllib.request import urlretrieve
urlretrieve("https://i.imgur.com/RBJoUjE.jpg",'Bar_Chart.jpg')

from PIL import Image
img2=Image.open('Bar_Chart.jpg')
img2_arr=np.array(img2)
img2_arr.shape

print(img2_arr)

plt.imshow(img2)

# We can turn off the axis and grid lines, and show a title using the relevant functions.
plt.grid(False)
plt.title("A Bar Chart and Histogram")
plt.axis('off')
plt.imshow(img2)

# To display a partof image, we can simply select a slice from the numpy array.
plt.grid(False)
plt.axis('off')
plt.title("A subpart of image")
plt.imshow(img2_arr[50:200,50:250])

# Plotting Multiple charts in a grid: Matplotlib and seaborn also support plotting multiple charts in a grid using plt.subplots
# Which returns a set of axes that can beused for plotting.
srn.set_style('darkgrid')
plt.subplots(2,3)

# To avoid overlap we add pad-called padding
plt.subplots(2,3)
plt.tight_layout(pad=2)

fig,axes=plt.subplots(2,3,figsize=(10,6))
plt.tight_layout(pad=2)

iris=srn.load_dataset('iris')
print(iris)
setosa_data=iris[iris.species=='setosa']
virginica_data=iris[iris.species=='virginica']
versicolor_data=iris[iris.species=='versicolor']

tips=srn.load_dataset('tips')
print(tips)

from urllib.request import urlretrieve
urlretrieve('https://i.imgur.com/So7Dk5F.jpg','geogebra.jpg')
from PIL import Image
geo=Image.open('geogebra.jpg')

fig,axes=plt.subplots(2,3,figsize=(14,8))
plt.tight_layout(pad=3)
years=range(2000,2010)
apple=[0.8,0.85,0.9,0.95,0.90,0.85,0.95,1.0,0.90,0.95]
orange=[0.95,0.9,0.8,0.85,0.75,0.8,0.85,0.75,0.8,0.85]
# Use the axes for plotting
axes[0,0].plot(years,apple,'o-r')
axes[0,0].plot(years,orange,'x-g')
axes[0,0].set_title('Crop Yied')
axes[0,0].set_xlabel('Year')
axes[0,0].set_ylabel('Yield(Tons per hectear)')
axes[0,0].legend(['Apple','Orange'])
# Use the seaborn for plotting
srn.scatterplot(x=iris.sepal_length,y=iris.sepal_width,hue=iris.species,s=100,ax=axes[0,1])
axes[0,1].set_title('Sepal Length Vs Sepal Width')
# Use axes for plotting
axes[0,2].set_title("Distribution of Sepal Width")
axes[0,2].hist([setosa_data.sepal_width,versicolor_data.sepal_width,virginica_data.sepal_width],bins=np.arange(2,5,0.25),stacked=True)
axes[0,2].legend(['Setosa','Versicolor','Virginica'])
# Pass the axes into seaborn
axes[1,0].set_title('Restaurant Bills')
srn.barplot(x='day',y='total_bill',hue='sex',data=tips,ax=axes[1,0])
# Passs axes into seaborn
axes[1,1].set_title("Flight traffic")
srn.heatmap(flights_data,cmap='Blues',ax=axes[1,1])
# Plot an image using seaborn
axes[1,2].set_title("Show an image")
axes[1,2].imshow(geo)
axes[1,2].grid(False)
axes[1,2].set_xticks([])
axes[1,2].set_yticks([])

# Pair plot with seaborn: seaborn also provides a helper function srn.pairplot to automatically plotndifferent types of chart for pair of features within a dataframe.
iris.head()

srn.pairplot(iris,hue='species')

srn.pairplot(tips,hue='sex')
